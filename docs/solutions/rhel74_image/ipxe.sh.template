
# DO NOT CHANGE - PRE-GENERATED VALUES #
SSH_PUBLIC_KEY=<PUBLIC_KEY>
OS="<OS_NAME>"
RU="<RHEL_UNAME>"
RP="<RHEL_PASS>"
SAC_OCID=<ZEROS_OCID>
ISO_URL="<ISO_URL>"
ISO_NAME=`echo ${ISO_URL} | awk -F/ '{ print $NF }'`

LOCAL_IP=`curl -s http://169.254.169.254/opc/v1/vnics/0/privateIp`
AD=`curl -s http://169.254.169.254/opc/v1/instance/availabilityDomain`
COMPARTMENT=`curl -s http://169.254.169.254/opc/v1/instance/compartmentId`
VNIC_ID=`curl -s http://169.254.169.254/opc/v1/vnics/0/vnicId`
CIDR_BLOCK=`curl -s http://169.254.169.254/opc/v1/vnics/0/subnetCidrBlock`
MY_OCID=`curl -s http://169.254.169.254/opc/v1/instance/id`
OCI="oci --auth=instance_principal"

### DO NOT CHANGE THIS SHAPE!!! ###
SHAPE="BM.Standard1.36"

yum -y -q update
yum -y -q install httpd rsync lzma gcc libffi-devel python-devel openssl-devel unzip gcc rsyslog jq python-firewall
easy_install pip
pip install pip --upgrade
pip install --user oci-cli

export PATH=${PATH}:/root/.local/bin
SUBNET_ID=`${OCI} network vnic get --vnic-id=${VNIC_ID} | jq '.data ["subnet-id"]' | sed 's/\"//g'`

sed -i.bak 's/<\/zone>/  <service name=\"http\"\/>/' /etc/firewalld/zones/public.xml
echo "</zone>" >> /etc/firewalld/zones/public.xml
restorecon -Rv /etc/firewalld/zones/public.xml
service firewalld restart

systemctl enable httpd
systemctl start httpd

mkdir -p /var/www/{isos,html}
mkdir -p /var/www/html/{ipxe,oci,<OS_NAME>}
mkdir /mnt/iso
chmod 777 /var/www/isos

cd /var/www/isos
curl -s -o ${ISO_NAME} ${ISO_URL}
mount -o ro ./${ISO_NAME} /mnt/iso
cd /mnt/iso
find . -print | cpio -pmvdu /var/www/html/${OS}
cd ~
umount /mnt/iso

sed '/imtcp/s/#//g' -i.bak /etc/rsyslog.conf
sed '/InputTCPServerRun/s/#//g' -i.bak /etc/rsyslog.conf
systemctl restart rsyslog.service

cd /var/www/html/ipxe
ks
sed -i.bak 's|<IP>|'"${LOCAL_IP}"'|g
s|<OS>|'"${OS}"'|g
s|<RHEL_USER>|'"${RU}"'|g
s|<RHEL_PW>|'"${RP}"'|g' ks.cfg

cat > ipxeboot <<-EOF
#!ipxe
set target-iqn iqn.2015-02.oracle.boot:uefi
set root-path iscsi:169.254.0.2::::${target-iqn}
set alt-root iscsi:169.254.0.2:::1:${target-iqn}
set uefi-filename \EFI\BOOT\grubx64.efi 
sanhook ${root-path} || sanboot || 
sanhook ${alt-root} || sanboot || set url http://${LOCAL_IP}
# Set your kernel and initrd here...
kernel \${url}/<OS_NAME>/images/pxeboot/vmlinuz initrd=initrd.img vmlinuxconsole=tty0 console=ttyS0,9600 netroot=iscsi:@169.254.0.2::::iqn.2015-02.oracle.boot:uefi iscsi_initiator=iqn.2015-02.oracle.boot:instance ip=dhcp ks=http://${LOCAL_IP}/ipxe/ks.cfg
initrd \${url}/<OS_NAME>/images/pxeboot/initrd.img
boot
EOF

cd /var/www/html/oci
cloud
firewallcfg

sac_inst_ocid=`${OCI} compute instance launch \
--availability-domain=${AD} \
--compartment-id=${COMPARTMENT} --image-id=${SAC_OCID} \
--display-name="sacrifice" \
--ipxe-script-file="/var/www/html/ipxe/ipxeboot" \
--shape=${SHAPE} \
--subnet-id=${SUBNET_ID} \
--metadata='{"ssh_authorized_keys": "'"${SSH_PUBLIC_KEY}"'" }' | jq -r '.data["id"]'`
sleep 120

sac_vnic_attach=`${OCI} compute vnic-attachment list \
--instance-id=${sac_inst_ocid} \
--compartment-id=${COMPARTMENT} | jq -r '.data[0]["vnic-id"]'`

sac_ip=`${OCI} network vnic get --vnic-id=\${sac_vnic_attach} | jq -r '.data["private-ip"]'`

build_ping=1
state=""
while [ ${build_ping} == 1 ]
do
	sleep 120
	ping -q -c 1 ${sac_ip}
	build_ping=$?
	state=`inst_status ${sac_inst_ocid}`
	if [ "${state}" == "TERMINATED" ]
	then
		break
	fi
done

if [ "${state}" != "TERMINATED" ]
then
	ping_result=0
	while [ ${ping_result} == 0 ]
	do
		sleep 20
		ping -q -c 1 ${sac_ip}
		ping_result=$?
		state=`inst_status ${sac_inst_ocid}`
		if [ "${state}" == "TERMINATED" ]
		then
			break
		fi
	done
	if [ "${state}" != "TERMINATED" ]
	then
		image_ocid=`${OCI} compute image create \
		--compartment-id=${COMPARTMENT} \
		--instance-id=${sac_inst_ocid} \
		--display-name="RHEL_74" | jq -r '.data["id"]'`

		image_status=`img_status ${image_ocid}`
		while [ "${image_status}" != "AVAILABLE" ]
		do
			sleep 120
			image_status=`img_status ${image_ocid}`
		done
		${OCI} compute instance terminate --instance-id=${sac_inst_ocid} --force
	fi
fi
${OCI} compute instance terminate --instance-id=${MY_OCID} --force